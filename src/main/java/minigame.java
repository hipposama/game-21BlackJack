
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.Random;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DOM
 */
public class minigame extends javax.swing.JFrame {
    int deck =1;
    int headnum =4;
    int bodynum =2;
    int buy1 ,buy2 ,buy3 ,buy4 ,buy5 ,buy6 ,buy7 ,buy8 ,buy9 ,buy10 =1 ,buy11 =1 ,buy12 =1;
    int code1 ,code2 ,code3 ,code4 ;
    int money =1000;
    int m_bank = 2000;
    int sound ,effect;
    
    int htime = 0;
    Timer timer;
    Timer cooldown;
    
    int genre =1;
    Timer hpc_animation;
    Timer hpc_system;
    Timer slotR;
    Timer slotS;
    Timer slotW;
    int spin1 ,spin2 ,spin3 ,spin4 ,spin5 ,spin6 ,spin7 ,spin8 ,spin9 ;
    int hpcstart =0;
    int slotstart =0;
    int hammer_ani =1;
    int scissors_ani =1;
    int hpc_select =0;
    int hpc_bot =0;
    int hl_select =0;

    
    public minigame() {
        initComponents();
        
        loadsave();
        setResizable(false  );
        hpcON();
        esc.setIcon(new ImageIcon("src\\main\\java\\Image\\esc_white.png"));
        
        //character
        head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_1.png"));
        body.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\body"+(bodynum)+".png"));
        htime = 0;
        delay();
        cooldown.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minigame = new javax.swing.JPanel();
        esc_popup = new javax.swing.JLabel();
        slot_no = new javax.swing.JLabel();
        slot_yes = new javax.swing.JLabel();
        hl_yes = new javax.swing.JLabel();
        hl_no = new javax.swing.JLabel();
        hpc_no = new javax.swing.JLabel();
        hpc_yes = new javax.swing.JLabel();
        popup = new javax.swing.JLabel();
        spin = new javax.swing.JLabel();
        about = new javax.swing.JLabel();
        tabslot = new javax.swing.JLabel();
        tabhighlow = new javax.swing.JLabel();
        tabhpc = new javax.swing.JLabel();
        askslot = new javax.swing.JCheckBox();
        askhpc = new javax.swing.JCheckBox();
        askhl = new javax.swing.JCheckBox();
        slot9 = new javax.swing.JLabel();
        slot8 = new javax.swing.JLabel();
        slot7 = new javax.swing.JLabel();
        slot6 = new javax.swing.JLabel();
        slot5 = new javax.swing.JLabel();
        slot4 = new javax.swing.JLabel();
        slot3 = new javax.swing.JLabel();
        slot2 = new javax.swing.JLabel();
        slot1 = new javax.swing.JLabel();
        hl_txtwin = new javax.swing.JLabel();
        hl_high = new javax.swing.JLabel();
        hl_low = new javax.swing.JLabel();
        random_card = new javax.swing.JLabel();
        esc = new javax.swing.JLabel();
        scissors = new javax.swing.JLabel();
        paper = new javax.swing.JLabel();
        hammer = new javax.swing.JLabel();
        bal = new javax.swing.JLabel();
        head = new javax.swing.JLabel();
        body = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BJ21");

        minigame.setPreferredSize(new java.awt.Dimension(1024, 600));
        minigame.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        esc_popup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                esc_popupMouseClicked(evt);
            }
        });
        minigame.add(esc_popup, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 60, 70));

        slot_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                slot_noMouseClicked(evt);
            }
        });
        minigame.add(slot_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 390, 80, 80));

        slot_yes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                slot_yesMouseClicked(evt);
            }
        });
        minigame.add(slot_yes, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 90, 80));

        hl_yes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hl_yesMouseClicked(evt);
            }
        });
        minigame.add(hl_yes, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 90, 80));

        hl_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hl_noMouseClicked(evt);
            }
        });
        minigame.add(hl_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 390, 80, 80));

        hpc_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hpc_noMouseClicked(evt);
            }
        });
        minigame.add(hpc_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 390, 80, 80));

        hpc_yes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hpc_yesMouseClicked(evt);
            }
        });
        minigame.add(hpc_yes, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 90, 80));

        popup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                popupMouseClicked(evt);
            }
        });
        minigame.add(popup, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        spin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spinMouseClicked(evt);
            }
        });
        minigame.add(spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 170, 50));

        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        minigame.add(about, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 412, 50, 50));

        tabslot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabslotMouseClicked(evt);
            }
        });
        minigame.add(tabslot, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 110, 50));

        tabhighlow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabhighlowMouseClicked(evt);
            }
        });
        minigame.add(tabhighlow, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 130, 50));

        tabhpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabhpcMouseClicked(evt);
            }
        });
        minigame.add(tabhpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 130, 50));

        askslot.setText("Don't Ask");
        minigame.add(askslot, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, -1, -1));

        askhpc.setText("Don't Ask");
        minigame.add(askhpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, -1, -1));

        askhl.setText("Don't Ask");
        minigame.add(askhl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, -1, -1));

        slot9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot9.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        minigame.add(slot9, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 371, 100, 40));

        slot8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot8.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        minigame.add(slot8, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 371, 100, 40));

        slot7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        minigame.add(slot7, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 371, 100, 40));

        slot6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        minigame.add(slot6, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 202, 100, 40));

        slot5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        minigame.add(slot5, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 202, 100, 40));

        slot4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slot4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        minigame.add(slot4, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 202, 100, 40));

        slot3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minigame.add(slot3, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 260, 100, 90));

        slot2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minigame.add(slot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 260, 100, 90));

        slot1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minigame.add(slot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 260, 100, 90));

        hl_txtwin.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        hl_txtwin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minigame.add(hl_txtwin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 400, 90));

        hl_high.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hl_highMouseClicked(evt);
            }
        });
        minigame.add(hl_high, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 190, 50));

        hl_low.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hl_lowMouseClicked(evt);
            }
        });
        minigame.add(hl_low, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 262, 190, 50));

        random_card.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minigame.add(random_card, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 100, 120));

        esc.setIcon(new javax.swing.ImageIcon("C:\\Users\\DOM\\Desktop\\21BlackJack\\src\\main\\java\\image\\esc_white.png")); // NOI18N
        esc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                escMouseClicked(evt);
            }
        });
        minigame.add(esc, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 30, 40));

        scissors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scissorsMouseClicked(evt);
            }
        });
        minigame.add(scissors, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 140, 140));

        paper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paperMouseClicked(evt);
            }
        });
        minigame.add(paper, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 140, 140));

        hammer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hammerMouseClicked(evt);
            }
        });
        minigame.add(hammer, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 140, 140));

        bal.setFont(new java.awt.Font("Calibri", 1, 40)); // NOI18N
        bal.setForeground(new java.awt.Color(255, 204, 0));
        bal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bal.setText("$1000");
        minigame.add(bal, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 480, 160, 50));
        minigame.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 150, 170, 170));
        minigame.add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 280, 120, 130));

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\DOM\\Desktop\\21BlackJack\\src\\main\\java\\image\\minigame\\slot.png")); // NOI18N
        minigame.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minigame, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minigame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void winsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-achievement-completed.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void winslotsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-magical-coin-win.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void rdsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-slot-machine-win-alert.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void tabsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-arcade-game-jump-coin.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void errorsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-quick-lock.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    private void delay() {
         cooldown = new Timer (5000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 animation();
                 timer.start();
             }
     });
 }
    
    private void animation() {
         timer = new Timer (200 , new ActionListener() {
             
             @Override
             public void actionPerformed(ActionEvent e) {
                 htime++ ;
                 head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_"+(htime)+".png"));
                          if (htime >3) {
                           htime = 0;
                           head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_1.png"));
                           timer.stop();
                          }
             }
     });
 } 
    
    private void escMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escMouseClicked
        tabsound();
        autosave();
        new screen().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_escMouseClicked

    private void hammerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hammerMouseClicked
        if(askhpc.isSelected() && (hpcstart ==0)) {
            hpc_select =1;
                        try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 hpcstart =1;
                                 tabsound();
                                 paper.setIcon(new ImageIcon(""));
                                 hpc_animation();
                                 hpc_animation.start();
                                 hpc_system();
                                 hpc_system.start();
                                 popup.hide();
                                 esc_popup.hide();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
        autosave();
        }
        else if(hpcstart ==0) {
        hpc_select =1;
        popuperror();
        popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
        hpc_yes.show();
        hpc_no.show();
        tabsound();
        }
    }//GEN-LAST:event_hammerMouseClicked

    private void paperMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperMouseClicked
        if(askhpc.isSelected() && (hpcstart ==0)) {
            hpc_select =2;
                        try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 hpcstart =1;
                                 tabsound();
                                 paper.setIcon(new ImageIcon(""));
                                 hpc_animation();
                                 hpc_animation.start();
                                 hpc_system();
                                 hpc_system.start();
                                 popup.hide();
                                 esc_popup.hide();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
        autosave();
        }
        else if(hpcstart ==0) {
        hpc_select =2;
        popuperror();
        popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
        hpc_yes.show();
        hpc_no.show();
        tabsound();
        }
    }//GEN-LAST:event_paperMouseClicked

    private void scissorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scissorsMouseClicked
        if(askhpc.isSelected() && (hpcstart ==0)) {
            hpc_select =3;
                        try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 hpcstart =1;
                                 tabsound();
                                 paper.setIcon(new ImageIcon(""));
                                 hpc_animation();
                                 hpc_animation.start();
                                 hpc_system();
                                 hpc_system.start();
                                 popup.hide();
                                 esc_popup.hide();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
        autosave();
        }
        else if(hpcstart ==0) {
        hpc_select =3;
        popuperror();
        popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
        hpc_yes.show();
        hpc_no.show();
        tabsound();
        }
    }//GEN-LAST:event_scissorsMouseClicked

    private void esc_popupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_esc_popupMouseClicked
        if (genre ==1) hpcON();
        else if (genre ==2) highlowON();
        else if (genre ==3) slotON();
        popup.hide();
        esc_popup.hide();
        tabsound();
    }//GEN-LAST:event_esc_popupMouseClicked

    private void hpc_yesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hpc_yesMouseClicked
            try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 hpcstart =1;
                                 paper.setIcon(new ImageIcon(""));
                                 hpc_animation();
                                 hpc_animation.start();
                                 hpc_system();
                                 hpc_system.start();
                                 popup.hide();
                                 esc_popup.hide();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
        autosave();
    }//GEN-LAST:event_hpc_yesMouseClicked

    private void hpc_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hpc_noMouseClicked
        if (genre ==1) hpcON();
        popup.hide();
        esc_popup.hide();
        tabsound();
    }//GEN-LAST:event_hpc_noMouseClicked

    private void popupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popupMouseClicked
        //block under layer 
    }//GEN-LAST:event_popupMouseClicked

    private void tabhpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabhpcMouseClicked
        genre =1;
        hpcON();
        tabsound();
    }//GEN-LAST:event_tabhpcMouseClicked

    private void tabhighlowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabhighlowMouseClicked
        genre =2;
        highlowON();
        tabsound();
    }//GEN-LAST:event_tabhighlowMouseClicked

    private void tabslotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabslotMouseClicked
        genre =3;
        slotON();
        tabsound();
        slotRD();
        slot1.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\7.png"));
        slot2.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\7.png"));
        slot3.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\7.png"));
    }//GEN-LAST:event_tabslotMouseClicked

    private void hl_lowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hl_lowMouseClicked
        if(askhl.isSelected() && (hpcstart ==0)) {
            hl_select =1;
            try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 tabsound();
                                 popup.hide();
                                 esc_popup.hide();
                                 highlowgame();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                    }
        autosave();
        }
        
        else {
            hl_select =1;
            popuperror();
            popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
            hl_yes.show();
            hl_no.show();
            tabsound();
        }
    }//GEN-LAST:event_hl_lowMouseClicked

    private void hl_highMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hl_highMouseClicked
        if(askhl.isSelected() && (hpcstart ==0)) {
            hl_select =2;
            try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 tabsound();
                                 popup.hide();
                                 esc_popup.hide();
                                 highlowgame();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                    }
        autosave();
        }
        
        else {
            hl_select =2;
            popuperror();
            popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
            hl_yes.show();
            hl_no.show();
            tabsound();
        }
    }//GEN-LAST:event_hl_highMouseClicked

    private void hl_yesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hl_yesMouseClicked
            try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 popup.hide();
                                 esc_popup.hide();
                                 highlowgame();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                    }
        autosave();
    }//GEN-LAST:event_hl_yesMouseClicked

    private void hl_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hl_noMouseClicked
        if (genre ==2) highlowON();
        popup.hide();
        esc_popup.hide();
        tabsound();
    }//GEN-LAST:event_hl_noMouseClicked

    private void spinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinMouseClicked
        if(askslot.isSelected() && (slotstart ==0)) {
                    try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 slotstart =1;
                                 popup.hide();
                                 esc_popup.hide();
                                 randomslot();
                                 slotR.start();
                                 stopslot();
                                 slotS.start();
                                 winerslot();
                                 slotW.start();
                                 rdsound();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
        autosave();
            }  
        else if(slotstart ==0) {
            tabsound();
            popuperror();
            popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\wantplay.png"));
            slot_yes.show();
            slot_no.show();
            }
    }//GEN-LAST:event_spinMouseClicked

    private void slot_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slot_noMouseClicked
        popup.hide();
        esc_popup.hide();
        slot_yes.hide();
        slot_no.hide();
        tabsound();
    }//GEN-LAST:event_slot_noMouseClicked

    private void slot_yesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slot_yesMouseClicked
                if(slotstart ==0) {
                    try {
                            if(money  < 200){
                                throw new Exception();
                            }
                             else if(200 <= money) {
                                 money = money - 200;
                                 bal.setText("$"+money);
                                 slotstart =1;
                                 popup.hide();
                                 esc_popup.hide();
                                 randomslot();
                                 slotR.start();
                                 stopslot();
                                 slotS.start();
                                 winerslot();
                                 slotW.start();
                                 rdsound();
                                 tabsound();
                             }
                    } catch(Exception e) {
                        popuperror();
                        popup.setIcon(new ImageIcon("src\\main\\java\\image\\bank\\bank_error.png"));
                        errorsound();
                    }
                }
        autosave();
    }//GEN-LAST:event_slot_yesMouseClicked

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        if (genre ==1) popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\hpc_about.png"));
        else if (genre ==2) popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\hl_about.png"));
        else if (genre ==3) popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\slot_about.png"));
        popuperror();
        tabsound();
    }//GEN-LAST:event_aboutMouseClicked

    private void popuperror() {
        popup.show();
        esc_popup.show();
    }
    
    private void autosave() {
        try {
            FileOutputStream fos = new FileOutputStream ("save.dat");
            BufferedOutputStream bos = new BufferedOutputStream (fos);
            ObjectOutputStream oos = new ObjectOutputStream (bos);
            
            data data = new data();
            
            data.money = money;
            data.headnum = headnum;
            data.bodynum = bodynum;
            data.m_bank = m_bank;
            data.sound = sound;
            data.effect = effect;
            data.deck = deck;
            data.buy1 = buy1;
            data.buy2 = buy2;
            data.buy3 = buy3;
            data.buy4 = buy4;
            data.buy5 = buy5;
            data.buy6 = buy6;
            data.buy7 = buy7;
            data.buy8 = buy8;
            data.buy9 = buy9;
            data.code1 = code1;
            data.code2 = code2;
            data.code3 = code3;
            data.code4 = code4;
            
            oos.writeObject(data);
            oos.close();
            
        } catch (IOException e) {
            System.out.println("Error :(");
        }
    }
        
    private void loadsave() {
        try {
            FileInputStream fis = new FileInputStream ("save.dat");
            BufferedInputStream bis = new BufferedInputStream (fis);
            ObjectInputStream ois = new ObjectInputStream (bis);
            
            data data = (data)ois.readObject();
            
            money = data.money;
            headnum = data.headnum;
            bodynum = data.bodynum;
            m_bank = data.m_bank;
            sound = data.sound;
            effect = data.effect;
            deck = data.deck;
            buy1 = data.buy1;
            buy2 = data.buy2;
            buy3 = data.buy3;
            buy4 = data.buy4;
            buy5 = data.buy5;
            buy6 = data.buy6;
            buy7 = data.buy7;
            buy8 = data.buy8;
            buy9 = data.buy9;
            code1 = data.code1;
            code2 = data.code2;
            code3 = data.code3;
            code4 = data.code4;
            
            ois.close();
            bal.setText("$"+money);
            
        } catch (IOException e) {
            System.out.println("Error load save... :(");
        } catch (ClassNotFoundException e) {
            System.out.println("create a new save... :(");
        }
    }    
    
    private void slotON() {
        //cleargame high low
        random_card.hide();
        hl_low.hide();
        hl_high.hide();
        hl_yes.hide();
        hl_no.hide();
        hl_txtwin.hide();
        askhl.hide();
        //cleargame hpc
        popup.hide();
        esc_popup.hide();
        hpc_yes.hide();
        hpc_no.hide();
        hpc_select =0;
        hammer.hide();
        paper.hide();
        scissors.hide();
        askhpc.hide();
        //setgame 
        slot1.show();
        slot2.show();
        slot3.show();
        slot4.show();
        slot5.show();
        slot6.show();
        slot7.show();
        slot8.show();
        slot9.show();
        slotstart =0;
        slot_yes.hide();
        slot_no.hide();
        askslot.show();
        bg.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot.png"));
    }
    
    private void randomslot() {
         slotR = new Timer (150 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                    slotRD();
             }
     });
    }
    
    private void stopslot() {
         slotS = new Timer (1000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                    slotR.stop();
                    slotRD();
                    slotS.stop();
             }
     });
 }
    
    private void winerslot() {
         slotW = new Timer (2000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 //slotsetwin();
                 if(spin1 == 7 && spin2 == 7 && spin3 == 7) {
                    popup.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\jackpot.png"));
                    popuperror();
                    money = money+77977;
                    bal.setText("$"+money);
                    winslotsound();
                 }
                 else if(spin1 == spin2 && spin2 == spin3) {
                    popup.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\minijackpot.png"));
                    popuperror();
                    money = money+30200;
                    bal.setText("$"+money);
                    winslotsound();
                 }
                 else {
                    popup.setIcon(new ImageIcon("src\\main\\java\\Image\\bank\\lottery_lose.png"));
                    popuperror();
                    errorsound();
                 }
                    autosave();
                    slotW.stop();
             }
     });
 }
    
    private void slotsetwin() {
        //jackpot 777 set7
        //mini jackpot set 1-6
        spin1 = 7;
        spin2 = 7;
        spin3 = 7;
        slot1.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin1)+".png"));
        slot2.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin2)+".png"));
        slot3.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin3)+".png"));
    }
            
    private void slotRD() {
        Random sl = new Random();
        spin1 = 1+sl.nextInt(7);
        spin2 = 1+sl.nextInt(7);
        spin3 = 1+sl.nextInt(7);
        spin4 = 1+sl.nextInt(7);
        spin5 = 1+sl.nextInt(7);
        spin6 = 1+sl.nextInt(7);
        spin7 = 1+sl.nextInt(7);
        spin8 = 1+sl.nextInt(7);
        spin9 = 1+sl.nextInt(7);

        slot1.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin1)+".png"));
        slot2.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin2)+".png"));
        slot3.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin3)+".png"));
        slot4.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin4)+".png"));
        slot5.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin5)+".png"));
        slot6.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin6)+".png"));
        slot7.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin7)+".png"));
        slot8.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin8)+".png"));
        slot9.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\slot\\"+(spin9)+".png"));
    }
    
    private void highlowON() {
        //cleargame slot
        slot1.hide();
        slot2.hide();
        slot3.hide();
        slot4.hide();
        slot5.hide();
        slot6.hide();
        slot7.hide();
        slot8.hide();
        slot9.hide();
        slot_yes.hide();
        slot_no.hide();
        askslot.hide();
        //cleargame hpc
        popup.hide();
        esc_popup.hide();
        hpc_yes.hide();
        hpc_no.hide();
        hpc_select =0;
        hammer.hide();
        paper.hide();
        scissors.hide();
        askhpc.hide();
        //setgame 
        hl_select =0;
        random_card.show();
        hl_low.show();
        hl_high.show();
        hl_yes.hide();
        hl_no.hide();
        hl_txtwin.show();
        hl_txtwin.setText("");
        askhl.show();
        random_card.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
        bg.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\highlow.png"));
    }
    
    private void highlowgame() {
        Random hl = new Random();
        int suit, rank;
        suit = 1+hl.nextInt(4);
        rank = 1+hl.nextInt(10);
        random_card.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suit)+" "+"("+(rank)+").png"));
        
        if(hl_select ==1) {
            if(rank==1 || rank==2 || rank==3 || rank==4 || rank==5) {
                winsound();
                hl_txtwin.setText("คุณชนะ ได้รับ $200");
                money = money + 400;
                bal.setText("$"+money);
             }
            else if(rank==6 || rank==7 || rank==8 || rank==9 || rank==10) {
                errorsound();
                hl_txtwin.setText("คุณแพ้ ขาดทุน $200");
                bal.setText("$"+money);
            }
        }
        if(hl_select ==2) {
            if(rank==1 || rank==2 || rank==3 || rank==4 || rank==5) {
                errorsound();
                hl_txtwin.setText("คุณแพ้ ขาดทุน $200");
                bal.setText("$"+money);
             }
            else if(rank==6 || rank==7 || rank==8 || rank==9 || rank==10) {
                winsound();
                hl_txtwin.setText("คุณชนะ ได้รับ $200");
                money = money + 400;
                bal.setText("$"+money);
            }
        }
    }
    
    private void hpcON() {
        //cleargame slot
        slot1.hide();
        slot2.hide();
        slot3.hide();
        slot4.hide();
        slot5.hide();
        slot6.hide();
        slot7.hide();
        slot8.hide();
        slot9.hide();
        slot_yes.hide();
        slot_no.hide();
        askslot.hide();
        //cleargame high low
        random_card.hide();
        hl_low.hide();
        hl_high.hide();
        hl_yes.hide();
        hl_no.hide();
        hl_txtwin.hide();
        askhl.hide();
        //setgame 
        hpcstart =0;
        popup.hide();
        esc_popup.hide();
        hpc_yes.hide();
        hpc_no.hide();
        hpc_select =0;
        askhpc.show();
        hammer.show();
        paper.show();
        scissors.show();
        bg.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\hpc.png"));
        hammer.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\h11.png"));
        paper.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\p.png"));
        scissors.setIcon(new ImageIcon("src\\main\\java\\Image\\minigame\\sc.png"));
    }
    
    private void hpcgame() {
                 hpc_system.stop();
                 //player
                 if (hpc_select ==1) {
                 hammer.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\h11.png"));
                 }
                 if (hpc_select ==2) {
                 hammer.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\p.png"));
                 }
                 if (hpc_select ==3) {
                 hammer.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\sc.png"));
                 }
                 //bot
                 Random hpc = new Random();
                 hpc_bot= 1+hpc.nextInt(3);
                 if (hpc_bot ==1) {
                 scissors.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\h21.png"));
                 }
                 if (hpc_bot ==2) {
                 scissors.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\p2.png"));
                 }
                 if (hpc_bot ==3) {
                 scissors.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\sc2.png"));
                 }
                 hpc_win();
                 hpc_system.start();
    }
    
    private void hpc_animation() {
         hpc_animation = new Timer (300 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 hammer_ani ++;
                 hammer.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\h1"+(hammer_ani)+".png"));
                 if(hammer_ani >2) hammer_ani =0;
                 //System.out.println(hammer_ani);
                 scissors_ani ++;
                 scissors.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\h2"+(hammer_ani)+".png"));
                 if(scissors_ani >2) scissors_ani =0;
                 //System.out.println(scissors_ani);
             }
     });
    }
    
    private void hpc_system() {
         hpc_system = new Timer (2400 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 hpc_animation.stop();
                 hpcgame();
                 }
     });
    }
    
    private void hpc_win() {
         hpc_system = new Timer (1000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 hpc_end();
             }
     });
    }

   private void hpc_end() {
        hpc_system.stop();
                 //hammer
                     if (hpc_select ==1 && hpc_bot ==3) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\win.png"));
                         money = money+400;
                         bal.setText("$"+money);
                         winsound();
                     }
                     else if (hpc_select ==1 && hpc_bot ==2) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\lose.png"));
                         errorsound();
                     }
                     else if (hpc_select ==1 && hpc_bot ==1) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\tie.png"));
                         money = money+200;
                         bal.setText("$"+money);
                         errorsound();
                     }
                  //paper
                     if (hpc_select ==2 && hpc_bot ==1) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\win.png"));
                         money = money+400;
                         bal.setText("$"+money);
                         winsound();
                     }
                     else if (hpc_select ==2 && hpc_bot ==3) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\lose.png"));
                         errorsound();
                     }
                     else if (hpc_select ==2 && hpc_bot ==2) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\tie.png"));
                         money = money+200;
                         bal.setText("$"+money);
                         errorsound();
                     }
                  //scissors
                     if (hpc_select ==3 && hpc_bot ==2) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\win.png"));
                         money = money+400;
                         bal.setText("$"+money);
                         winsound();
                     }
                     else if (hpc_select ==3 && hpc_bot ==1) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\lose.png"));
                         errorsound();
                     }
                     else if (hpc_select ==3 && hpc_bot ==3) {
                         popuperror();
                         popup.setIcon(new ImageIcon("src\\main\\java\\image\\minigame\\tie.png"));
                         money = money+200;
                         bal.setText("$"+money);
                         errorsound();
                     }
         autosave();
   }
   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(minigame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(minigame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(minigame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(minigame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new minigame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel about;
    private javax.swing.JCheckBox askhl;
    private javax.swing.JCheckBox askhpc;
    private javax.swing.JCheckBox askslot;
    private javax.swing.JLabel bal;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel body;
    private javax.swing.JLabel esc;
    private javax.swing.JLabel esc_popup;
    private javax.swing.JLabel hammer;
    private javax.swing.JLabel head;
    private javax.swing.JLabel hl_high;
    private javax.swing.JLabel hl_low;
    private javax.swing.JLabel hl_no;
    private javax.swing.JLabel hl_txtwin;
    private javax.swing.JLabel hl_yes;
    private javax.swing.JLabel hpc_no;
    private javax.swing.JLabel hpc_yes;
    private javax.swing.JPanel minigame;
    private javax.swing.JLabel paper;
    private javax.swing.JLabel popup;
    private javax.swing.JLabel random_card;
    private javax.swing.JLabel scissors;
    private javax.swing.JLabel slot1;
    private javax.swing.JLabel slot2;
    private javax.swing.JLabel slot3;
    private javax.swing.JLabel slot4;
    private javax.swing.JLabel slot5;
    private javax.swing.JLabel slot6;
    private javax.swing.JLabel slot7;
    private javax.swing.JLabel slot8;
    private javax.swing.JLabel slot9;
    private javax.swing.JLabel slot_no;
    private javax.swing.JLabel slot_yes;
    private javax.swing.JLabel spin;
    private javax.swing.JLabel tabhighlow;
    private javax.swing.JLabel tabhpc;
    private javax.swing.JLabel tabslot;
    // End of variables declaration//GEN-END:variables
}
