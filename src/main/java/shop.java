
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.Timer;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DOM
 */
public class shop extends javax.swing.JFrame {

int money = 1000;
int m_bank = 2000;
int headnum = 4;
int bodynum = 2;
int buy1 ,buy2 ,buy3 ,buy4 ,buy5 ,buy6 ,buy7 ,buy8 ,buy9 ,buy10 =1 ,buy11 =1 ,buy12 =1;
int code1 ,code2 ,code3 ,code4 ;
int sound ,effect;
int deck = 1;

int page = 1;
int genre = 1;

    int htime = 0;
    Timer timer;
    Timer cooldown;
	


    public shop() {
        initComponents();
        
        gui();
        setResizable(false);
        shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop1A.png"));
        errorbuy.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
                errorbuy.hide();
                esc_errorbuy.hide();
        loadsave();
        //character
        head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_1.png"));
        body.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\body"+(bodynum)+".png"));
        
        htime = 0;
        delay();
        cooldown.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Shop = new javax.swing.JPanel();
        esc_errorbuy = new javax.swing.JLabel();
        errorbuy = new javax.swing.JLabel();
        esc = new javax.swing.JLabel();
        next = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        bal = new javax.swing.JLabel();
        price4 = new javax.swing.JLabel();
        price3 = new javax.swing.JLabel();
        price2 = new javax.swing.JLabel();
        price1 = new javax.swing.JLabel();
        head = new javax.swing.JLabel();
        body = new javax.swing.JLabel();
        shopCard = new javax.swing.JLabel();
        shopBody = new javax.swing.JLabel();
        shopHead = new javax.swing.JLabel();
        shopBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BJ21");

        Shop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        esc_errorbuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                esc_errorbuyMouseClicked(evt);
            }
        });
        Shop.add(esc_errorbuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 60, 60));

        errorbuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                errorbuyMouseClicked(evt);
            }
        });
        errorbuy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                errorbuyKeyPressed(evt);
            }
        });
        Shop.add(errorbuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        esc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                escMouseClicked(evt);
            }
        });
        Shop.add(esc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 35, 35));

        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextMouseClicked(evt);
            }
        });
        Shop.add(next, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, 50, 50));

        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        Shop.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 520, 50, 50));

        bal.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        bal.setForeground(new java.awt.Color(255, 204, 0));
        bal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bal.setText("$1000");
        Shop.add(bal, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 480, 170, 50));

        price4.setBackground(new java.awt.Color(255, 255, 255));
        price4.setFont(new java.awt.Font("TF Phethai", 1, 36)); // NOI18N
        price4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        price4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                price4MouseClicked(evt);
            }
        });
        Shop.add(price4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 140, 60));

        price3.setBackground(new java.awt.Color(255, 255, 255));
        price3.setFont(new java.awt.Font("TF Phethai", 1, 36)); // NOI18N
        price3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        price3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                price3MouseClicked(evt);
            }
        });
        Shop.add(price3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, 150, 60));

        price2.setBackground(new java.awt.Color(255, 255, 255));
        price2.setFont(new java.awt.Font("TF Phethai", 1, 36)); // NOI18N
        price2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        price2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                price2MouseClicked(evt);
            }
        });
        Shop.add(price2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 140, 60));

        price1.setBackground(new java.awt.Color(255, 255, 255));
        price1.setFont(new java.awt.Font("TF Phethai", 1, 36)); // NOI18N
        price1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        price1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                price1MouseClicked(evt);
            }
        });
        Shop.add(price1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 150, 60));
        Shop.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 150, 170, 170));
        Shop.add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 280, 120, 130));

        shopCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shopCardMouseClicked(evt);
            }
        });
        Shop.add(shopCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 70, 60));

        shopBody.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shopBodyMouseClicked(evt);
            }
        });
        Shop.add(shopBody, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 100, 60));

        shopHead.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shopHeadMouseClicked(evt);
            }
        });
        Shop.add(shopHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 70, 60));

        shopBG.setIcon(new javax.swing.ImageIcon("C:\\Users\\DOM\\Desktop\\21BlackJack\\src\\main\\java\\image\\shop\\shop1A.png")); // NOI18N
        Shop.add(shopBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Shop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Shop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void tabsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-arcade-game-jump-coin.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void swapsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-quick-lock.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }

    private void delay() {
         cooldown = new Timer (5000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 animation();
                 timer.start();
             }
     });
 } 
    
    private void animation() {
         timer = new Timer (200 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 htime++ ;
                 head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_"+(htime)+".png"));
                          if (htime >3) {
                           htime = 0;
                           head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_1.png"));
                           timer.stop();
                          }
             }
     });
 } 
    
    private void escMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escMouseClicked
        tabsound();
        autosave();
        new screen().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_escMouseClicked

    private void shopBodyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shopBodyMouseClicked
        tabsound();
        genre =2;
        gui();
    }//GEN-LAST:event_shopBodyMouseClicked

    private void shopCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shopCardMouseClicked
        tabsound();
        genre =3;
        gui();
    }//GEN-LAST:event_shopCardMouseClicked

    private void shopHeadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shopHeadMouseClicked
        tabsound();
        genre =1;
        gui();
    }//GEN-LAST:event_shopHeadMouseClicked

    private void nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseClicked
        tabsound();
        page =2;
        gui();
    }//GEN-LAST:event_nextMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        tabsound();
        page =1;
        gui();
    }//GEN-LAST:event_backMouseClicked

    private void price2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_price2MouseClicked
        if(genre ==1) buyhead1();
        if(genre ==2) buybody1();
        if(genre ==3) buycard1();
        if(genre ==1 && page ==1 && buy1 == 1) headnum =3;
        if(genre ==2 && page ==1 && buy4 == 1) bodynum =4;
        if(genre ==3 && page ==1 && buy7 == 1) deck =2;
        useItem();
        tabsound();
    }//GEN-LAST:event_price2MouseClicked

    private void esc_errorbuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_esc_errorbuyMouseClicked
        tabsound();
        errorbuy.hide();
        esc_errorbuy.hide();
    }//GEN-LAST:event_esc_errorbuyMouseClicked

    private void price3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_price3MouseClicked
        if(genre ==1) buyhead2();
        if(genre ==2) buybody2();
        if(genre ==3) buycard2();
        if(genre ==1 && page ==1 && buy2 == 1) headnum =2;
        if(genre ==2 && page ==1 && buy5 == 1) bodynum =3;
        if(genre ==3 && page ==1 && buy8 == 1) deck =3;
        useItem();
        tabsound();
    }//GEN-LAST:event_price3MouseClicked

    private void errorbuyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errorbuyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_errorbuyKeyPressed

    private void price1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_price1MouseClicked
        if(genre ==1 && page ==1 && buy10 == 1) headnum =4;
        if(genre ==2 && page ==1 && buy11 == 1) bodynum =2;
        if(genre ==3 && page ==1 && buy12 == 1) deck =1;
        useItem();
        tabsound();
    }//GEN-LAST:event_price1MouseClicked

    private void price4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_price4MouseClicked
        if(genre ==1) buyhead3();
        if(genre ==2) buybody3();
        if(genre ==3) buycard3();
        if(genre ==1 && page ==1 && buy3 == 1) headnum =1;
        if(genre ==2 && page ==1 && buy6 == 1) bodynum =1;
        if(genre ==3 && page ==1 && buy9 == 1) deck =4;
        useItem();
        tabsound();
    }//GEN-LAST:event_price4MouseClicked

    private void errorbuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorbuyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_errorbuyMouseClicked

    private void gui() {
        
        if(page ==1) {
            price2.show();
            price4.hide();
        }
        else if(page ==2) {
            price2.hide();
            price4.show();
        }
        
        if(genre ==1 && page ==1) {
                //head page1
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop1A.png"));
                //gui start
                price1.show();
                price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
                price2.show();
                price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_4999.png"));
                price3.show();
                price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_9999.png"));
            }
        if(genre ==1 && page ==2) {
                //head page2
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop1B.png"));
                //gui start
                price1.hide();
                price3.hide();
                price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_9999.png"));
            }
        
        if(genre ==2 && page ==1) {
                //body page1
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop2A.png"));
                //gui start
                price1.show();
                price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
                price2.show();
                price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_4999.png"));
                price3.show();
                price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_9999.png"));
            }
        if(genre ==2 && page ==2) {
                //body page2
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop2B.png"));
                //gui start
                price1.hide();
                price3.hide();
                price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_9999.png"));
            }

        
        if(genre ==3 && page ==1) {
                //card page1
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop3A.png"));
                //gui start
                price1.show();
                price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
                price2.show();
                price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_2999.png"));
                price3.show();
                price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_9999.png"));
            }
        if(genre ==3 && page ==2) {
                //card page2
                shopBG.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\shop3B.png"));
                //gui start
                price1.hide();
                price3.hide();
                price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_4999.png"));
            }
        useItem();
        page = 1;
    }
    
    private void useItem() {
        // if(genre ==1 && page ==1 && buy10 == 1) headnum =4;
        // if(genre ==1 && page ==1 && buy1 == 1) headnum =3;
        
        //update character
        head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headnum)+"_1.png"));
        body.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\body"+(bodynum)+".png"));
        
        //use
        reitem();
            //head 
            if(genre ==1 && headnum ==4) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==1 && headnum ==3) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==1 && headnum ==2) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==1 && headnum ==1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
             //body
            if(genre ==2 && bodynum ==2) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==2 && bodynum ==4) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==2 && bodynum ==3) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==2 && bodynum ==1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            //card
            if(genre ==3 && deck ==4) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==3 && deck ==3) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==3 && deck ==2) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            if(genre ==3 && deck ==1) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_off.png"));
            
    }
    
    private void reitem() {
        //head 
            if(genre ==1 && page ==1 && buy10 == 1) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==1 && page ==1 && buy1 == 1) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==1 && page ==1 && buy2 == 1) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==1 && page ==2 && buy3 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==1 && page ==1 && buy3 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
        //body
            if(genre ==2 && page ==1 && buy11 == 1) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==2 && page ==1 && buy4 == 1) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==2 && page ==1 && buy5 == 1) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==2 && page ==2 && buy6 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==2 && page ==1 && buy6 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
        //card
            if(genre ==3 && page ==1 && buy12 == 1) price1.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==3 && page ==1 && buy7 == 1) price2.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==3 && page ==1 && buy8 == 1) price3.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==3 && page ==2 && buy9 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
            if(genre ==3 && page ==1 && buy9 == 1) price4.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\button_on.png"));
        }
        

    private void buyhead1() { 
        if(genre ==1 && page ==1 && buy1 == 0) 
                try {
                            if(money < 4999){
                                throw new Exception();
                            }
                             else if(4999 <= money) {
                                 money = money - 4999;
                                 buy1 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buyhead2() { 
        if(genre ==1 && page ==1 && buy2 == 0) 
                try {
                            if(money < 9999){
                                throw new Exception();
                            }
                             else if(4999 <= money) {
                                 money = money - 9999;
                                 buy2 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buyhead3() { 
        if(genre ==1 && page ==1 && buy3 == 0) 
                try {
                            if(money < 9999){
                                throw new Exception();
                            }
                             else if(9999 <= money) {
                                 money = money - 9999;
                                 buy3 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    
    private void buybody1() { 
        if(genre ==2 && page ==1 && buy4 == 0) 
                try {
                            if(money < 4999){
                                throw new Exception();
                            }
                             else if(4999 <= money) {
                                 money = money - 4999;
                                 buy4 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buybody2() {
        if(genre ==2 && page ==1 && buy5 == 0) 
                try {
                            if(money < 9999){
                                throw new Exception();
                            }
                             else if(9999 <= money) {
                                 money = money - 9999;
                                 buy5 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buybody3() {
        if(genre ==2 && page ==1 && buy6 == 0) 
                try {
                            if(money < 9999){
                                throw new Exception();
                            }
                             else if(9999 <= money) {
                                 money = money - 9999;
                                 buy6 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    
    private void buycard1() { 
        if(genre ==3 && page ==1 && buy7 == 0) 
                try {
                            if(money < 2999){
                                throw new Exception();
                            }
                             else if(2999 <= money) {
                                 money = money - 2999;
                                 buy7 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buycard2() { 
        if(genre ==3 && page ==1 && buy8 == 0) 
                try {
                            if(money < 9999){
                                throw new Exception();
                            }
                             else if(9999 <= money) {
                                 money = money - 9999;
                                 buy8 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    private void buycard3() { 
        if(genre ==3 && page ==1 && buy9 == 0) 
                try {
                            if(money < 4999){
                                throw new Exception();
                            }
                             else if(4999 <= money) {
                                 money = money - 4999;
                                 buy9 =1;
                                 bal.setText("$"+money);
                             }
                    } catch(Exception e) {
                        swapsound();
                        errorbuy.show();
                        esc_errorbuy.show();
                    }
        useItem();
    }
    
    private void autosave() {
        try {
            FileOutputStream fos = new FileOutputStream ("save.dat");
            BufferedOutputStream bos = new BufferedOutputStream (fos);
            ObjectOutputStream oos = new ObjectOutputStream (bos);
            
            data data = new data();
            
            data.money = money;
            data.headnum = headnum;
            data.bodynum = bodynum;
            data.m_bank = m_bank;
            data.sound = sound;
            data.effect = effect;
            data.deck = deck;
            data.buy1 = buy1;
            data.buy2 = buy2;
            data.buy3 = buy3;
            data.buy4 = buy4;
            data.buy5 = buy5;
            data.buy6 = buy6;
            data.buy7 = buy7;
            data.buy8 = buy8;
            data.buy9 = buy9;
            data.code1 = code1;
            data.code2 = code2;
            data.code3 = code3;
            data.code4 = code4;
            
            oos.writeObject(data);
            oos.close();
            
        } catch (IOException e) {
            System.out.println("Error :(");
        }
    }
        
    private void loadsave() {
        try {
            FileInputStream fis = new FileInputStream ("save.dat");
            BufferedInputStream bis = new BufferedInputStream (fis);
            ObjectInputStream ois = new ObjectInputStream (bis);
            
            data data = (data)ois.readObject();
            
            money = data.money;
            headnum = data.headnum;
            bodynum = data.bodynum;
            m_bank = data.m_bank;
            sound = data.sound;
            effect = data.effect;
            deck = data.deck;
            buy1 = data.buy1;
            buy2 = data.buy2;
            buy3 = data.buy3;
            buy4 = data.buy4;
            buy5 = data.buy5;
            buy6 = data.buy6;
            buy7 = data.buy7;
            buy8 = data.buy8;
            buy9 = data.buy9;
            code1 = data.code1;
            code2 = data.code2;
            code3 = data.code3;
            code4 = data.code4;
            
            ois.close();
            bal.setText("$"+money);
            useItem();
            
        } catch (IOException e) {
            System.out.println("Error load save... :(");
        } catch (ClassNotFoundException e) {
            System.out.println("Error load save... :(");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new shop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Shop;
    private javax.swing.JLabel back;
    private javax.swing.JLabel bal;
    private javax.swing.JLabel body;
    private javax.swing.JLabel errorbuy;
    private javax.swing.JLabel esc;
    private javax.swing.JLabel esc_errorbuy;
    private javax.swing.JLabel head;
    private javax.swing.JLabel next;
    private javax.swing.JLabel price1;
    private javax.swing.JLabel price2;
    private javax.swing.JLabel price3;
    private javax.swing.JLabel price4;
    private javax.swing.JLabel shopBG;
    private javax.swing.JLabel shopBody;
    private javax.swing.JLabel shopCard;
    private javax.swing.JLabel shopHead;
    // End of variables declaration//GEN-END:variables
}
