
import java.awt.event.ActionEvent;
import java.util.*;
import javax.swing.*;
import javax.swing.Timer;
import java.awt.event.ActionListener;
import java.io.*;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DOM
 */
public class main extends javax.swing.JFrame {
    
    Random rd = new Random(); 
    final int[] value = {0, 11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10};        
    int suitp1 = 0 ,suitp2 = 0 ,suitp3 = 0 ,suitp4 = 0 ,suitp5 = 0  ,rankp1 = 0 ,rankp2 = 0 ,rankp3 = 0 ,rankp4 = 0 ,rankp5 = 0;
    int suitc1 = 0 ,suitc2 = 0 ,suitc3 = 0 ,suitc4 = 0 ,suitc5 = 0  ,rankc1 = 0 ,rankc2 = 0 ,rankc3 = 0 ,rankc4 = 0 ,rankc5 = 0;
    int sumrank ,sumrankc ,valueC1 ,valueC2 ,valueC3 ,valueC4 ,valueC5, valueP1 ,valueP2 ,valueP3 ,valueP4 ,valueP5 = 0;
    int buy1 ,buy2 ,buy3 ,buy4 ,buy5 ,buy6 ,buy7 ,buy8 ,buy9 ,buy10 =1 ,buy11 =1 ,buy12 =1;
    int code1 ,code2 ,code3 ,code4 ;
    int sound ,effect;
        int money = 1000;
        int m_bank = 2000;
        int bet = 0;
    int htime = 0;
    int headn =0;
    int bodyn =0;
    int deck =1;
    
    Timer clearboard;
    Timer timer;
    Timer cooldown;
    Timer character;
    Timer save;
    

    public main() {
        initComponents();
        
        setResizable(false);
        Dealer.hide();
        Player.hide();
        scoreD.hide();
        scoreP.hide();
        txtend1.hide();
        // txtend2.hide();
        hit.hide();
        stand.hide();
        txtend2.setText("วางเดิมพันแล้วกดปุ่ม DEAL!! เพื่อเริ่ม");
        menu_esc.hide();
        b_resume.hide();
        b_save.hide();
        b_menu.hide();
        close.hide();
        ngame.hide();
        cancel.hide();
        
        stand.setEnabled(false);
        hit.setEnabled(false);
        
        esc.setIcon(new ImageIcon("src\\main\\java\\Image\\esc_white.png"));
        bg.setIcon(new ImageIcon("src\\main\\java\\Image\\background.png"));
        menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\menu_esc.png"));
        
        /**
        head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headn)+"_1.png"));
        body.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\body"+(bodyn)+".png"));
        */
        loadsave();
        resetint();
        
        htime = 0;
        delay();
        cooldown.start();
        character();
        character.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        half = new javax.swing.JLabel();
        all_in = new javax.swing.JLabel();
        coin5000 = new javax.swing.JLabel();
        coin1000 = new javax.swing.JLabel();
        coin100 = new javax.swing.JLabel();
        coin10 = new javax.swing.JLabel();
        coin1 = new javax.swing.JLabel();
        b_menu = new javax.swing.JLabel();
        b_save = new javax.swing.JLabel();
        b_resume = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        menu_esc = new javax.swing.JLabel();
        esc = new javax.swing.JLabel();
        txtbal1 = new javax.swing.JLabel();
        bal = new javax.swing.JLabel();
        hit = new javax.swing.JButton();
        stand = new javax.swing.JButton();
        ngame = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        betbal = new javax.swing.JLabel();
        txtbetting = new javax.swing.JLabel();
        head = new javax.swing.JLabel();
        body = new javax.swing.JLabel();
        hand_c5 = new javax.swing.JLabel();
        hand_c4 = new javax.swing.JLabel();
        hand_c3 = new javax.swing.JLabel();
        hand_c2 = new javax.swing.JLabel();
        hand_c1 = new javax.swing.JLabel();
        hand_p5 = new javax.swing.JLabel();
        hand_p4 = new javax.swing.JLabel();
        hand_p3 = new javax.swing.JLabel();
        hand_p2 = new javax.swing.JLabel();
        hand_p1 = new javax.swing.JLabel();
        txtend1 = new javax.swing.JLabel();
        txtend2 = new javax.swing.JLabel();
        Dealer = new javax.swing.JLabel();
        scoreD = new javax.swing.JLabel();
        Player = new javax.swing.JLabel();
        scoreP = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BJ21");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        half.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                halfMouseClicked(evt);
            }
        });
        jPanel1.add(half, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, 90, 30));

        all_in.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                all_inMouseClicked(evt);
            }
        });
        jPanel1.add(all_in, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 510, 90, 30));

        coin5000.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coin5000MouseClicked(evt);
            }
        });
        jPanel1.add(coin5000, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 510, 60, 60));

        coin1000.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coin1000MouseClicked(evt);
            }
        });
        jPanel1.add(coin1000, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 502, 62, 68));

        coin100.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coin100MouseClicked(evt);
            }
        });
        jPanel1.add(coin100, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 500, 70, 70));

        coin10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coin10MouseClicked(evt);
            }
        });
        jPanel1.add(coin10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 492, 64, 70));

        coin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coin1MouseClicked(evt);
            }
        });
        jPanel1.add(coin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 482, 60, 70));

        b_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_menuMouseClicked(evt);
            }
        });
        jPanel1.add(b_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 340, 70));

        b_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_saveMouseClicked(evt);
            }
        });
        jPanel1.add(b_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 340, 70));

        b_resume.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_resumeMouseClicked(evt);
            }
        });
        jPanel1.add(b_resume, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 340, 70));

        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 60, 70));

        menu_esc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_escMouseClicked(evt);
            }
        });
        jPanel1.add(menu_esc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        esc.setText("esc");
        esc.setToolTipText("");
        esc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                escMouseClicked(evt);
            }
        });
        jPanel1.add(esc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        txtbal1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtbal1.setForeground(new java.awt.Color(255, 255, 255));
        txtbal1.setText("เงินคงเหลือ");
        jPanel1.add(txtbal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 280, 130, 50));

        bal.setFont(new java.awt.Font("Calibri", 1, 34)); // NOI18N
        bal.setForeground(new java.awt.Color(255, 204, 0));
        bal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bal.setText("$1000");
        jPanel1.add(bal, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 320, 140, 40));

        hit.setBackground(new java.awt.Color(255, 255, 255));
        hit.setText("HIT");
        hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitActionPerformed(evt);
            }
        });
        jPanel1.add(hit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 130, 40));

        stand.setBackground(new java.awt.Color(255, 255, 255));
        stand.setText("STAND");
        stand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standActionPerformed(evt);
            }
        });
        jPanel1.add(stand, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 120, 40));

        ngame.setBackground(new java.awt.Color(255, 255, 255));
        ngame.setText("DEAL!!");
        ngame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngameActionPerformed(evt);
            }
        });
        jPanel1.add(ngame, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 510, 80, -1));

        cancel.setBackground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 540, 80, -1));

        betbal.setFont(new java.awt.Font("Calibri", 1, 34)); // NOI18N
        betbal.setForeground(new java.awt.Color(255, 204, 0));
        betbal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        betbal.setText("$0");
        jPanel1.add(betbal, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 540, 160, 40));

        txtbetting.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtbetting.setForeground(new java.awt.Color(255, 255, 255));
        txtbetting.setText("จำนวนเงินที่เดิมพัน");
        jPanel1.add(txtbetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 510, 160, 30));
        jPanel1.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 340, 170, 170));
        jPanel1.add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 470, 120, 130));
        jPanel1.add(hand_c5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, 90, 130));
        jPanel1.add(hand_c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 90, 130));
        jPanel1.add(hand_c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 90, 130));
        jPanel1.add(hand_c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 90, 130));
        jPanel1.add(hand_c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 90, 130));
        jPanel1.add(hand_p5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 290, 90, 130));
        jPanel1.add(hand_p4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 90, 130));
        jPanel1.add(hand_p3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 90, 130));
        jPanel1.add(hand_p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 90, 130));
        jPanel1.add(hand_p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 90, 130));

        txtend1.setFont(new java.awt.Font("CordiaUPC", 3, 100)); // NOI18N
        txtend1.setForeground(new java.awt.Color(255, 255, 255));
        txtend1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtend1.setText(" ผลแพ้ชนะ");
        jPanel1.add(txtend1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 340, 210));

        txtend2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtend2.setForeground(new java.awt.Color(255, 255, 255));
        txtend2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtend2.setText("คำอธิบายว่าแพ้หรือชนะยังไง");
        jPanel1.add(txtend2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 580, 60));

        Dealer.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Dealer.setForeground(new java.awt.Color(255, 255, 255));
        Dealer.setText("แต้มเจ้ามือ");
        jPanel1.add(Dealer, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 190, 50));

        scoreD.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scoreD.setForeground(new java.awt.Color(255, 255, 255));
        scoreD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreD.setText("BLACKJACK (21)");
        jPanel1.add(scoreD, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 200, 30));

        Player.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Player.setForeground(new java.awt.Color(255, 255, 255));
        Player.setText("แต้มของคุณ");
        jPanel1.add(Player, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 200, 50));

        scoreP.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scoreP.setForeground(new java.awt.Color(255, 255, 255));
        scoreP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreP.setText("BLACKJACK (21)");
        jPanel1.add(scoreP, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, 200, 30));

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\DOM\\Desktop\\21BlackJack\\src\\main\\java\\image\\background.png")); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void coinsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-coins-sound.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void flipsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-poker-card-flick.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void tabsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-arcade-game-jump-coin.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    public void errorsound() {
        try {
                File sound = new File("src\\main\\java\\sound\\mixkit-quick-lock.wav");
                Clip clicksound = AudioSystem.getClip();
                clicksound.open(AudioSystem.getAudioInputStream(sound ));
                if (effect ==0) clicksound.start();
        } catch (Exception e) {
        }
    }
    
    
    int hitcount = 0;
    
    private void hitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitActionPerformed
        flipsound();
       // System.out.println(hitcount);
        if ( hitcount == 0) {
            suitp3 = 1+rd.nextInt(4);
            rankp3 = 1+rd.nextInt(13);
        hand_p3.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitp3)+" "+"("+(rankp3)+").png"));
        valueP3 = value[rankp3];
        sumrank = valueP1 + valueP2 + valueP3 + valueP4 + valueP5;
        scoreP.setText(""+sumrank);
             if(rankp3 == 1) {
                    if(sumrank > 21) {
                        valueP3 = 1;
                     }
                }
             PchackAce();
                if (sumrank == 21){
                    scoreP.setText("BLACKJACK (21)");
             }          
        
             if (sumrank > 21){
                 scoreP.setText("BUST ("+sumrank+")");
                   txtend1.setText("คุณแพ้!");
                   txtend2.setText("แต้มของคุณเกิน 21 แต้ม (เสีย $"+bet+")");
                   betbal.setText("$0");
                   hit.setEnabled(false);
                   stand.setEnabled(false);
                   ngame.setEnabled(true);
                   bet =0;
                   setboard();
                   clearboard.start();
             }
             autosave();
        }
        
        else if ( hitcount == 1) {
            suitp4 = 1+rd.nextInt(4);
            rankp4 = 1+rd.nextInt(13);
        hand_p4.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitp4)+" "+"("+(rankp4)+").png"));
        valueP4 = value[rankp4];
        sumrank = valueP1 + valueP2 + valueP3 + valueP4 + valueP5;
        scoreP.setText(""+sumrank);
             if(rankp4 == 1) {
                    if(sumrank > 21) {
                        valueP4 = 1;
                     }
                }
             PchackAce();
                if (sumrank == 21){
                    scoreP.setText("BLACKJACK (21)");
             }
        
             if (sumrank > 21){
                 scoreP.setText("BUST ("+sumrank+")");
                   txtend1.setText("คุณแพ้!");
                   txtend2.setText("แต้มของคุณเกิน 21 แต้ม (เสีย $"+bet+")");
                   betbal.setText("$0");
                   hit.setEnabled(false);
                   stand.setEnabled(false);
                   ngame.setEnabled(true);
                   bet =0;
                   setboard();
                   clearboard.start();
             }
        }
        
        else if ( hitcount == 2) {
            suitp5 = 1+rd.nextInt(4);
            rankp5 = 1+rd.nextInt(13);
        hand_p5.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitp5)+" "+"("+(rankp5)+").png"));
        valueP5 = value[rankp5];
        sumrank = valueP1 + valueP2 + valueP3 + valueP4 + valueP5;
        scoreP.setText(""+sumrank);
             if(rankp5 == 1) {
                    if(sumrank > 21) {
                        valueP5 = 1;
                     }
                }
             PchackAce();
                if (sumrank == 21){
                    scoreP.setText("BLACKJACK (21)");
             }
             
             if (sumrank > 21){
                 scoreP.setText("BUST ("+sumrank+")");
                   txtend1.setText("คุณแพ้!");
                   txtend2.setText("แต้มของคุณเกิน 21 แต้ม (เสีย $"+bet+")");
                   betbal.setText("$0");
                   hit.setEnabled(false);
                   stand.setEnabled(false);
                   ngame.setEnabled(true);
                   bet =0;
                   setboard();
                   clearboard.start();
             }
        hit.setEnabled(false);
        }
        hitcount++;
    }//GEN-LAST:event_hitActionPerformed

    private void standActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standActionPerformed
        tabsound();
        
        // Ai calculator
            suitc1 = 1+rd.nextInt(4);
            rankc1 = 1+rd.nextInt(13);
        hand_c1.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitc1)+" "+"("+(rankc1)+").png"));
        valueC1 = value[rankc1];
        sumrankc = valueC1+valueC2;
        scoreD.setText(""+sumrankc);
        dealerAI();
        
        //ประกาศผล
        if(sumrank >0) {
                if (sumrankc > 21){
                    scoreD.setText("BUST ("+sumrankc+")");
                      txtend1.setText("คุณชนะ");
                      txtend2.setText("แต้มของเจ้ามือเกิน 21 แต้ม (กำไร $"+bet+")");
                      money = money+(bet*2);
                      bal.setText("$"+money);
                      betbal.setText("$0");
                      bet =0;
                      setboard();
                      clearboard.start();
                 }
                else if (sumrankc < sumrank){
                   txtend1.setText("คุณชนะ");
                   txtend2.setText("แต้มของเจ้ามือน้อยกว่าของคุณ (กำไร $"+bet+")");
                   money = money+(bet*2);
                   bal.setText("$"+money);
                   betbal.setText("$0");
                   bet =0;
                   setboard();
                   clearboard.start();
                }
                else if (sumrankc > sumrank){
                    txtend1.setText("คุณแพ้");
                   txtend2.setText("แต้มของเจ้ามือมากกว่าของคุณ (เสีย $"+bet+")");
                   betbal.setText("$0");
                   bet =0;
                   setboard();
                   clearboard.start();
                }
                else if (sumrankc == sumrank){
                    txtend1.setText("เสมอ");
                    txtend2.setText("แต้มของเจ้ามือเท่ากับของคุณ");
                   money = money+bet;
                   bal.setText("$"+money);
                    betbal.setText("$0");
                    bet =0;
                    setboard();
                    clearboard.start();
                }
                if (sumrank == 21){
                    scoreP.setText("BLACKJACK (21)");
                }
                if (sumrankc == 21){
                    scoreD.setText("BLACKJACK (21)");
                }
        }
        
        ngame.setEnabled(true);
        hit.setEnabled(false);
        stand.setEnabled(false);
        autosave();
    }//GEN-LAST:event_standActionPerformed

    private void ngameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngameActionPerformed
        if (bet >0) {
                tabsound();
                resetint();
                hit.show();
                stand.show();  
                //start game
                ngame.setEnabled(false);
                stand.setEnabled(true);
                hit.setEnabled(true);
                ngame.hide();
                cancel.hide();
                
                newgame();
                flipsound();
                
                coin1.hide();
                coin10.hide();
                coin100.hide();
                coin1000.hide();
                coin5000.hide();
                half.hide();
                all_in.hide();
                bg.setIcon(new ImageIcon("src\\main\\java\\image\\menu\\background.png"));
        }
    }//GEN-LAST:event_ngameActionPerformed

    private void escMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escMouseClicked
        tabsound();
        menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\menu_esc.png"));
        menu_esc.show();
        b_resume.show();
        b_save.show();
        b_menu.show();
    }//GEN-LAST:event_escMouseClicked

    private void b_resumeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_resumeMouseClicked
        tabsound();
        menu_esc.hide();
        b_resume.hide();
        b_save.hide();
        b_menu.hide();
    }//GEN-LAST:event_b_resumeMouseClicked

    private void b_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_menuMouseClicked
        tabsound();
        new screen().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_b_menuMouseClicked

    private void save() {
         save = new Timer (500 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                    menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\menu_esc.png"));
                    save.stop();
             }
     });
 }  
    
    private void b_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_saveMouseClicked
        tabsound();
        menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\menu_saving.png"));
        save();
        save.start();
        autosave();
    }//GEN-LAST:event_b_saveMouseClicked

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        money = money+bet;
        tabsound();
        bet =0;
        bal.setText("$"+money);
        betbal.setText("$"+bet);
        ngame.hide();
        cancel.hide();
    }//GEN-LAST:event_cancelActionPerformed

    private void coin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coin1MouseClicked
        try {
            if(money < 1){
                throw new Exception();
            }
            else if(money >= 1) {
            money= money - 1;
            bet = bet+1;
            bal.setText("$"+money);
            betbal.setText("$"+bet);
            coinsound();
            ngame.show();
            cancel.show();
            }
        }
        catch(Exception e) {                
            errorsound();
            menu_esc.show();
            close.show();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));   
        }
    }//GEN-LAST:event_coin1MouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        close.hide();
        menu_esc.hide();
    }//GEN-LAST:event_closeMouseClicked

    private void coin10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coin10MouseClicked
        try {
            if(money < 10){
                throw new Exception();
            }
            else if(money >= 10) {
                money= money - 10;
                bet = bet+10;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                coinsound();
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            errorsound();
            menu_esc.show();
            close.show();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_coin10MouseClicked

    private void coin100MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coin100MouseClicked
        try {
            if(money < 100){
                throw new Exception();
            }
            else if(money >= 100) {
                money= money - 100;
                bet = bet+100;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                coinsound();
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            errorsound();
            menu_esc.show();
            close.show();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_coin100MouseClicked

    private void coin1000MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coin1000MouseClicked
        try {
            if(money < 1000){
                throw new Exception();
            }
            else if(money >= 1000) {
                money= money - 1000;
                bet = bet+1000;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                coinsound();
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            errorsound();
            menu_esc.show();
            close.show();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_coin1000MouseClicked

    private void coin5000MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coin5000MouseClicked
        try {
            if(money < 5000){
                throw new Exception();
            }
            else if(money >= 5000) {
                money= money - 5000;
                bet = bet+5000;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                coinsound();
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            errorsound();
            menu_esc.show();
            close.show();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_coin5000MouseClicked

    private void all_inMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_all_inMouseClicked
        try {
            if(money ==0){
                throw new Exception();
            }
            else if(money >= 1) {
                bet = bet+money;
                money= 0;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                tabsound();
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            menu_esc.show();
            close.show();
            errorsound();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_all_inMouseClicked

    private void halfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_halfMouseClicked
        try {
            if(money ==0){
                throw new Exception();
            }
            else if(money >= 1 && money % 2 ==0) {
                bet = bet+(money/2);
                money= money/2;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                tabsound();
                ngame.show();
                cancel.show();
            }
            else {
                bet = bet+(money/2);
                money= (money/2)+1;
                bal.setText("$"+money);
                betbal.setText("$"+bet);
                ngame.show();
                cancel.show();
            }
        }
        catch(Exception e) {
            menu_esc.show();
            close.show();
            errorsound();
            menu_esc.setIcon(new ImageIcon("src\\main\\java\\Image\\shop\\errorbuy.png"));
        }
    }//GEN-LAST:event_halfMouseClicked

    private void menu_escMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_escMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_escMouseClicked

    private void autosave() {
        try {
            FileOutputStream fos = new FileOutputStream ("save.dat");
            BufferedOutputStream bos = new BufferedOutputStream (fos);
            ObjectOutputStream oos = new ObjectOutputStream (bos);
            
            data data = new data();
            
            data.money = money;
            data.headnum = headn;
            data.bodynum = bodyn;
            data.m_bank = m_bank;
            data.sound = sound;
            data.effect = effect;
            data.deck = deck;
            data.buy1 = buy1;
            data.buy2 = buy2;
            data.buy3 = buy3;
            data.buy4 = buy4;
            data.buy5 = buy5;
            data.buy6 = buy6;
            data.buy7 = buy7;
            data.buy8 = buy8;
            data.buy9 = buy9;
            data.code1 = code1;
            data.code2 = code2;
            data.code3 = code3;
            data.code4 = code4;
            
            oos.writeObject(data);
            oos.close();
            
        } catch (IOException e) {
            System.out.println("Error :(");
        }
    }
    
    private void loadsave() {
        try {
            FileInputStream fis = new FileInputStream ("save.dat");
            BufferedInputStream bis = new BufferedInputStream (fis);
            ObjectInputStream ois = new ObjectInputStream (bis);
            
            data data = (data)ois.readObject();

            money = data.money;
            headn = data.headnum;
            bodyn = data.bodynum;
            m_bank = data.m_bank;
            sound = data.sound;
            effect = data.effect;
            deck = data.deck;
            buy1 = data.buy1;
            buy2 = data.buy2;
            buy3 = data.buy3;
            buy4 = data.buy4;
            buy5 = data.buy5;
            buy6 = data.buy6;
            buy7 = data.buy7;
            buy8 = data.buy8;
            buy9 = data.buy9;
            code1 = data.code1;
            code2 = data.code2;
            code3 = data.code3;
            code4 = data.code4;
            
            ois.close();
            bal.setText("$"+money);
            
        } catch (IOException e) {
            System.out.println("Error load save... :(");
        } catch (ClassNotFoundException e) {
            System.out.println("Error load save... :(");
        }
    }
            
    private void newgame() {
        //resetgame
        resetint();
        Dealer.show();
        Player.show();
        scoreD.show();
        scoreP.show();
        txtend1.show();
        txtend2.show();
        ngame.setEnabled(false);

        //player
            suitp1 = 1+rd.nextInt(4);
            rankp1 = 1+rd.nextInt(13);
        hand_p1.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitp1)+" "+"("+(rankp1)+").png"));
        
            suitp2 = 1+rd.nextInt(4);
            rankp2 = 1+rd.nextInt(13);
        hand_p2.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitp2)+" "+"("+(rankp2)+").png"));
 
        //com 
        hand_c1.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
        
            suitc2 = 1+rd.nextInt(4);
            rankc2 = 1+rd.nextInt(13);
        hand_c2.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitc2)+" "+"("+(rankc2)+").png"));
        
        //score
        valueP1 = value[rankp1];
        valueP2 = value[rankp2];
        sumrank = valueP1 + valueP2 + valueP3 + valueP4 + valueP5;
        scoreP.setText(""+sumrank);
        PchackAce(); 
       
        valueC2 = value[rankc2];
        sumrankc = valueC2;
        DchackAce();
        scoreD.setText(""+sumrankc+"+?");
        
        if (sumrank == 21){
            scoreP.setText("BLACKJACK (21)");
             }
}
    
    private void character() {
          //show character
         character = new Timer (2 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
        head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headn)+"_1.png"));
        body.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\body"+(bodyn)+".png"));
             }
         });
    }
    
    private void delay() {
         cooldown = new Timer (5000 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 animation();
                 timer.start();
             }
     });
 }  
      
    private void animation() {
         timer = new Timer (200 , new ActionListener() {
             
             @Override
             public void actionPerformed(ActionEvent e) {
                 character.stop();
                 htime++ ;
                 head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headn)+"_"+(htime)+".png"));
                          if (htime >3) {
                           htime = 0;
                           head.setIcon(new ImageIcon("src\\main\\java\\Image\\character\\head"+(headn)+"_1.png"));
                           timer.stop();
                          }
             }
     });
 }   
   
    private void dealerAI() {
        DchackAce();
        if (sumrankc < sumrank) {
        if (sumrankc <17 ) {
              suitc3 = 1+rd.nextInt(4);
              rankc3 = 1+rd.nextInt(13);
              flipsound();
            hand_c3.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitc3)+" "+"("+(rankc3)+").png"));
        valueC3 = value[rankc3];
        sumrankc = valueC1+valueC2+valueC3;
        DchackAce();
        scoreD.setText(""+sumrankc);
        
            if (sumrankc <17 ) {
              suitc4 = 1+rd.nextInt(4);
              rankc4 = 1+rd.nextInt(13);
            hand_c4.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitc4)+" "+"("+(rankc4)+").png"));
        valueC4 = value[rankc4];
        sumrankc = valueC1+valueC2+valueC3+valueC4;
        DchackAce();
        scoreD.setText(""+sumrankc);
        
            if (sumrankc <17 ) {
              suitc5 = 1+rd.nextInt(4);
              rankc5 = 1+rd.nextInt(13);
            hand_c5.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\"+(suitc5)+" "+"("+(rankc5)+").png"));
        valueC5 = value[rankc5];
        sumrankc = valueC1+valueC2+valueC3+valueC4+valueC5;
        DchackAce();
        scoreD.setText(""+sumrankc);
             }
          }
        }
    }
   }
    
    private void PchackAce() {
             if(rankp1 == 1) {
                    if(sumrank > 21) {
                        valueP1 = 1;
                     }
                }
             else if(rankp2 == 1) {
                    if(sumrank > 21) {
                        valueP2 = 1;
                      }
                }


             sumrank = valueP1 + valueP2 + valueP3 + valueP4 + valueP5;
             scoreP.setText(""+sumrank);
}

    private void DchackAce() {
        if(valueC1 == 11) {
            if(sumrankc > 21) {
                valueC1 = 1;
            }
        }
        if(valueC2 == 11) {
            if(sumrankc > 21) {
                valueC2 = 1;
            }
        }
        if(valueC3 == 11) {
            if(sumrankc > 21) {
                valueC3 = 1;
            }
        }
        if(valueC4 == 11) {
            if(sumrankc > 21) {
                valueC4 = 1;
            }
        }
        if(valueC5 == 11) {
            if(sumrankc > 21) {
                valueC5 = 1;
            }
        }
        
        sumrankc = valueC1+valueC2+valueC3+valueC4+valueC5;
        scoreD.setText(""+sumrankc);
 }
  
     private void resetint() {
       hand_p1.setIcon(new ImageIcon(""));
       hand_p2.setIcon(new ImageIcon(""));
       hand_p3.setIcon(new ImageIcon(""));
       hand_p4.setIcon(new ImageIcon(""));
       hand_p5.setIcon(new ImageIcon(""));
       hand_c1.setIcon(new ImageIcon(""));
       hand_c2.setIcon(new ImageIcon(""));
       hand_c3.setIcon(new ImageIcon(""));
       hand_c4.setIcon(new ImageIcon(""));
       hand_c5.setIcon(new ImageIcon(""));
       txtend1.setText(" ");
       txtend2.setText(" ");
        hitcount = 0;
        valueP1 =0;
        valueP2 =0;
        valueP3 =0;
        valueP4 =0;
        valueP5 =0;
        valueC1 =0;
        valueC2 =0;
        valueC3 =0;
        valueC4 =0;
        valueC5 =0;
        suitp1 = 0 ;
        suitp2 = 0 ;
        suitp3 = 0 ;
        suitp4 = 0 ;
        suitp5 = 0 ;
        rankp1 = 0 ;
        rankp2 = 0 ;
        rankp3 = 0 ;
        rankp4 = 0 ;
        rankp5 = 0 ;
         suitc1 = 0 ;
         suitc2 = 0 ;
         suitc3 = 0 ;
         suitc4 = 0 ;
         suitc5 = 0  ;
         rankc1 = 0 ;
         rankc2 = 0 ;
         rankc3 = 0 ;
         rankc4 = 0 ;
         rankc5 = 0 ;
         sumrank = 0 ;
         sumrankc = 0 ;
 }   
    
     private void setboard() {
         clearboard = new Timer (1500 , new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                hand_p1.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
                hand_p2.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
                hand_p3.setIcon(new ImageIcon(""));
                hand_p4.setIcon(new ImageIcon(""));
                hand_p5.setIcon(new ImageIcon(""));
                hand_c1.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
                hand_c2.setIcon(new ImageIcon("src\\main\\java\\Image\\deck"+(deck)+"\\cover.png"));
                hand_c3.setIcon(new ImageIcon(""));
                hand_c4.setIcon(new ImageIcon(""));
                hand_c5.setIcon(new ImageIcon(""));
                scoreP.setText("");
                scoreD.setText("");
                txtend1.setText(" ");
                txtend2.setText(" ");
                stand.hide();
                hit.hide();
                coin1.show();
                coin10.show();
                coin100.show();
                coin1000.show();
                coin5000.show();
                half.show();
                all_in.show();
                bg.setIcon(new ImageIcon("src\\main\\java\\image\\background.png"));
                
                clearboard.stop();
             }
     });
 }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dealer;
    private javax.swing.JLabel Player;
    private javax.swing.JLabel all_in;
    private javax.swing.JLabel b_menu;
    private javax.swing.JLabel b_resume;
    private javax.swing.JLabel b_save;
    private javax.swing.JLabel bal;
    private javax.swing.JLabel betbal;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel body;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel close;
    private javax.swing.JLabel coin1;
    private javax.swing.JLabel coin10;
    private javax.swing.JLabel coin100;
    private javax.swing.JLabel coin1000;
    private javax.swing.JLabel coin5000;
    private javax.swing.JLabel esc;
    private javax.swing.JLabel half;
    private javax.swing.JLabel hand_c1;
    private javax.swing.JLabel hand_c2;
    private javax.swing.JLabel hand_c3;
    private javax.swing.JLabel hand_c4;
    private javax.swing.JLabel hand_c5;
    private javax.swing.JLabel hand_p1;
    private javax.swing.JLabel hand_p2;
    private javax.swing.JLabel hand_p3;
    private javax.swing.JLabel hand_p4;
    private javax.swing.JLabel hand_p5;
    private javax.swing.JLabel head;
    private javax.swing.JButton hit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel menu_esc;
    private javax.swing.JButton ngame;
    private javax.swing.JLabel scoreD;
    private javax.swing.JLabel scoreP;
    private javax.swing.JButton stand;
    private javax.swing.JLabel txtbal1;
    private javax.swing.JLabel txtbetting;
    private javax.swing.JLabel txtend1;
    private javax.swing.JLabel txtend2;
    // End of variables declaration//GEN-END:variables

    private ActionListener ActionListener() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
